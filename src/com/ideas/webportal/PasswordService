package com.ideas.webportal.service;

import java.util.Date;


import com.ideas.webportal.exception.ApplicationException;
import com.ideas.webportal.model.domain.User;

public interface PasswordService {

	/**
	 * 
	 * @return
	 */
	public String generateOTP();

	/**
	 * 
	 * @param password
	 * @return
	 * @throws ApplicationException
	 */
	public String encryptPassword(String password) throws ApplicationException;
	
	public boolean changePassword(User user) throws ApplicationException;
	
	/**
	 * 
	 * @param password
	 * @return
	 * @throws ApplicationException
	 */
	public String decryptPassword(String password) throws ApplicationException;

	/**
	 * 
	 * @param encryptedPassword
	 * @param normalPassword
	 * @param passwordDate
	 * @return
	 * @throws ApplicationException
	 */
	public boolean verifyPassword(String encryptedPassword, String normalPassword,
			Date passwordDate) throws ApplicationException;

	/**
	 * 
	 * @return
	 * @throws ApplicationException
	 */
	public String generateEncryptedOtp() throws ApplicationException;

	/**
	 * 
	 * @param encryptedEmail
	 * @param password
	 * @return
	 * @throws ApplicationException
	 */
	public User validateNewUser(String encryptedEmail, String userName, String password)
			throws ApplicationException;
	
	/**
	 * 
	 * @param user
	 * @return
	 * @throws ApplicationException
	 */
	public boolean resetPassword(User user) throws ApplicationException;

	/**
	 * 
	 * @param email
	 * @param username
	 * @param encryptedOtp
	 * @return
	 * @throws ApplicationException
	 */
	public User forgotePassword(String contextName, String email, String username, String encryptedOtp)
			throws ApplicationException;

	/**
	 * 
	 * @param email
	 * @param userName
	 * @param password
	 * @return
	 * @throws ApplicationException
	 */
	public String encodeUrl(String contextName, String email, String userName, String password)
			throws ApplicationException;

	/**
	 * 
	 * @param aDate
	 * @return
	 */
	public boolean isBeforeMonths(Date aDate);

	/**
	 * This method is used to send the reset password link for the locked customer.
	 * @param userEmail
	 * 		:	user name.
	 * @param firstName
	 * 		:	first name.
	 * @param url
	 * 		:	reset url.
	 * @throws ApplicationException
	 * 		:	throws application exception
	 */
	public void sendPasswordResetLinkForLockedUser(User user, String contextName) throws ApplicationException;

}
